import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

import { useGlobal } from '@/hooks/useGlobal';

export const Loading = () => {
  useEffect(() => {
    document.body.style.overflow = 'hidden';
    return () => {
      document.body.style.overflow = '';
      if (!document.body.getAttribute('style')) {
        document.body.removeAttribute('style');
      }
    };
  }, []);

  return (
    <>
      <div className="z-[1000] h-screen w-screen fixed inset-0 bg-white dark:bg-zinc-950 flex justify-center items-center">
        <div className="max-sm:pb-16">
          {/* 对应 favicon 的 svg path（先直接写死，避免获取图片的速度受到网络影响） */}
          <svg
            className="animate-blink scale-50 max-sm:scale-[0.35]"
            width="512"
            height="512"
            xmlns="http://www.w3.org/2000/svg"
            version="1.1"
          >
            <path
              fill="#87D753"
              d="m107,83c207.90925,0 207.90925,0 235,25c1.03834,0.90105 1.03834,0.90105 2.09766,1.82031c19.34464,17.76785 27.55864,45.39755 29.125,70.78907c0.59748,24.21125 -6.09015,49.88945 -22.22266,68.39062c-0.49589,0.59651 -0.99177,1.19303 -1.50269,1.80762c-4.0595,4.80234 -8.31742,8.87401 -13.30981,12.69238c-0.72268,0.55534 -1.44536,1.11069 -2.18994,1.68286c-6.66304,4.92184 -13.70616,8.25266 -21.36475,11.32886c-3.64446,1.35314 -3.64446,1.35314 -6.63281,3.48828c0.64066,0.56848 1.28133,1.13695 1.94141,1.72266c2.70035,2.41059 5.38373,4.8385 8.05859,7.27734c0.62906,0.57234 1.25813,1.14469 1.90625,1.73438c19.12626,18.22407 32.45124,44.89568 46.09375,67.26562c0.49726,0.8142 0.99451,1.62841 1.50684,2.46729c6.83375,11.19211 13.63139,22.40469 20.36401,33.65795c2.78197,4.64539 5.59254,9.27024 8.44165,13.87476c2.58523,4.1949 5.15896,8.39563 7.6875,12.625c0.5775,0.96164 1.155,1.92328 1.75,2.91406c1.25,2.46094 1.25,2.46094 1.25,5.46094c-13.04749,0.23183 -26.09448,0.40945 -39.14361,0.51812c-6.05956,0.05217 -12.11771,0.1229 -18.17646,0.23627c-5.84861,0.10876 -11.69586,0.16847 -17.54541,0.19438c-2.23009,0.01846 -4.46011,0.05451 -6.68962,0.10853c-17.45945,0.40613 -17.45945,0.40613 -22.27531,-3.14354c-1.84197,-2.58129 -3.02849,-4.96484 -4.16959,-7.91376c-0.67998,-1.0493 -1.35996,-2.09859 -2.06055,-3.17969c-0.5472,-0.88945 -1.09441,-1.7789 -1.6582,-2.69531c-0.62262,-1.00547 -1.24523,-2.01094 -1.88672,-3.04687c-1.26302,-2.05209 -2.52604,-4.10417 -3.78906,-6.15625c-3.52186,-5.68748 -7.14942,-11.24513 -11.05103,-16.68018c-2.16237,-3.11841 -4.05566,-6.37582 -5.98022,-9.64404c-1.65765,-2.73533 -3.41066,-5.38366 -5.19922,-8.03516c-3.57703,-5.30388 -6.98432,-10.70044 -10.375,-16.125c-3.8661,-6.17262 -7.84468,-12.142 -12.21094,-17.97266c-1.86522,-2.56977 -3.55107,-5.20549 -5.22656,-7.90234c-5.46857,-8.7028 -11.78913,-16.75743 -18.3125,-24.6875c-0.44763,-0.55671 -0.89525,-1.11343 -1.35645,-1.68701c-6.97183,-8.32531 -14.69386,-6.87038 -25.89355,-8.18799c0,44.88 0,89.76 0,136c-28.05,0 -56.1,0 -85,0c0,-114.18 0,-228.36 0,-346zm85,76c0,19.8 0,39.6 0,60c43.67728,3.73109 70.06216,-1.51745 77.00121,-3.07263c6.93905,-1.55518 9.23439,-7.09604 10.99879,-9.92737c0.37383,-0.55688 0.74766,-1.11375 1.13281,-1.6875c4.59007,-8.21719 4.46241,-19.57396 1.98438,-28.48828c-3.19375,-6.96913 -8.0667,-11.78609 -15.17969,-14.63672c-5.46109,-1.90503 -10.92646,-2.31204 -16.67725,-2.30103c-0.64461,-0.00014 -1.28922,-0.00029 -1.95337,-0.00044c-0.66415,-0.00015 -4.22019,0.00845 -6.33032,0.01631c-1.47116,0.00187 -2.94232,0.00329 -4.41348,0.00429c-3.85674,0.0038 -7.71344,0.01362 -11.57016,0.02471c-4.63566,0.01206 -9.27133,0.01662 -13.907,0.02245c-7.02866,0.00967 -14.05725,0.02884 -21.08592,0.04621z"
            />
          </svg>
        </div>
      </div>
    </>
  );
};

/**
 * 页面加载进度条
 */
export default function LoadingProgress() {
  const router = useRouter();
  const { onLoading } = useGlobal();

  // 避免用户直接输入 URL 跳转时，动画不出现
  const [routing, setRouting] = useState(true);

  useEffect(() => {
    const handleStart = () => {
      setRouting(true);
    };

    const handleStop = () => {
      setTimeout(() => {
        setRouting(false);
      }, 1500);
    };

    handleStop();

    router.events.on('routeChangeStart', handleStart);
    router.events.on('routeChangeError', handleStop);
    router.events.on('routeChangeComplete', handleStop);

    return () => {
      router.events.off('routeChangeStart', handleStart);
      router.events.off('routeChangeComplete', handleStop);
      router.events.off('routeChangeError', handleStop);
    };
  }, []);

  if (routing || onLoading) return <Loading />;
}
